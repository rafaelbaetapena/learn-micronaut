micronaut:
  application:
    name: mnStockBroker
  server:
    port: 8080
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      redoc:
        paths: classpath:META-INF/swagger/views/redoc
        mapping: /redoc/**
      rapidoc:
        paths: classpath:META-INF/swagger/views/rapidoc
        mapping: /rapidoc/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
  security:
    authentication: bearer
    token:
      jwt:
        signatures:
          secret:
            generator:
              secret: changeThisSecretToALongSecureString
hello:
    controller:
      path: "/hello"
    service:
      greeting: "Hello from Service!"
    config:
      greeting:
        de: "Hallo"
        en: "Hello"
flyway:
  datasources:
    default:
      enabled: true
      clean-schema: false
      url: ${PG_JDBC_URL:`jdbc:postgresql://127.0.0.1:5433/mn-stock-broker`}
      user: ${PG_USERNAME:postgres}
      password: ${PG_PASSWORD} # secret
      schemas: mn
      default-schema: mn
datasources:
  default:
    url: ${PG_JDBC_URL:`jdbc:postgresql://127.0.0.1:5433/mn-stock-broker`}
    username: ${PG_USERNAME:postgres}
    password: ${PG_PASSWORD} # secret
    driver-class-name: org.postgresql.Driver
    schema-genenerate: NONE
    dialect: POSTGRES
# micronaut-data-jpa
jpa:
  default:
    packages-to-scan:
      - "com.rafaelbaetapena.broker.persistence"
    properties:
      hibernate:
        show_sql: false
# Json Settings
jackson:
  #property-naming-strategy: SNAKE_CASE
  serialization:
    writeDatesAsTimestamps: false
    writeDatesWithZoneId: true
    writeDateTimestampsAsNanoseconds: false
  deserialization:
    failOnUnknownProperties: false
  generator:
    #writeNumbersAsStrings: true
    writeNumbersAsStrings: false
    #writeBigDecimalAsPlain: true
    writeBigDecimalAsPlain: false